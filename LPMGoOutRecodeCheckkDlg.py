"""Subclass of GoOutRecodeCheckkDlg, which is generated by wxFormBuilder."""

import wx
import UI
import os
import pandas as pd
import compare_location as CL

# Implementing GoOutRecodeCheckkDlg
class LPMGoOutRecodeCheckkDlg( UI.GoOutRecodeCheckkDlg ):
	def __init__( self, parent ):
		UI.GoOutRecodeCheckkDlg.__init__( self, parent )

	# Handlers for GoOutRecodeCheckkDlg events.
	def get_source_path( self, event ):
		file_wildcard = "EXCEL files(*.xlsx)|*.xlsx|All files(*.*)|*.*"
		dlg = wx.FileDialog(self, "Open EXCEL file...",
							os.getcwd(),
							style=wx.FD_OPEN,
							wildcard=file_wildcard)
		if dlg.ShowModal() == wx.ID_OK:
			self.m_textCtrl_path_s.Value = dlg.GetPath()
		dlg.Destroy()

	def get_dest_path( self, event ):
		file_wildcard = "EXCEL files(*.xlsx)|*.xlsx|All files(*.*)|*.*"
		dlg = wx.FileDialog(self, "Select EXCEL file...",
							os.getcwd(),
							style=wx.FD_SAVE,
							wildcard=file_wildcard)
		if dlg.ShowModal() == wx.ID_OK:
			self.m_textCtrl_path_d.Value = dlg.GetPath()
		dlg.Destroy()

	def GoOutCheck( self, event ):
		# 检查源路径和导出路径
		src_path = self.m_textCtrl_path_s.Value
		dest_path = self.m_textCtrl_path_d.Value
		if dest_path == '':
			OUTPUT_FLAG = False
		else:
			OUTPUT_FLAG = True

		# 使用pandas读入外出记录单，计算记录数据，控制进度条
		df = pd.read_excel(src_path,
						   sheet_name=0,
						   header=2,
						   usecols=["编号","姓名","员工编号","部门","外出时间","外出类型","外出单位","外出地址"]
						   )
		rec_num = df.shape[0]
		did_num = 0
		df["距离"] = None
		df["较验"] = ""
		print(df)

		# 处理dataframe中的数据
		for index, row in df.iterrows():
			# 外出记录单较验控制
			# ---------------------------------------------------------------------------------------------------------
			# 1.获取外出单位和外出地址
			company = df.loc[index,"外出单位"]
			address = df.loc[index,"外出地址"]

			# 2.计算单位和外出地址间的距离
			distance = CL.distance_2locations(company, address)
			if distance != -1:
				df.loc[index,"距离"] = round(distance)
			else:
				df.loc[index,"距离"] = -1

			# ---------------------------------------------------------------------------------------------------------
			# 计算进度条控制数
			did_num += 1
			percent =  int((did_num/rec_num)*100)
			# 显示进度控制条
			self.m_gauge_proc.SetValue(percent)
			self.m_staticText_proc.SetLabel(str(percent)+' %')

		# 更新DF较验位
		for index, row in df.iterrows():
			if df.loc[index,"距离"]!=-1:
				if df.loc[index,"距离"]<1000:
					df.loc[index, "较验"] = "合规"
				else:
					df.loc[index, "较验"] = "超出距离"
			else:
				df.loc[index, "较验"] = "未识别"
		print(df)
		# 根据标志位确定是否需要导出
		if OUTPUT_FLAG == True:
			df.to_excel(dest_path)
			dlg = wx.MessageDialog(None, u"外出记录单较验完毕,未符合项已导出！", u"外出记录单较验", wx.OK | wx.ICON_INFORMATION)
			dlg.ShowModal()



	def GoOutRecodeCheckDlgCancel( self, event ):
		self.Close(True)

